17.03.06 월

 우리는 지금 명령어 체계로 페이지를 이동하고 있는데 index 페이지는 어떻게 가야하는지..

 * Index
 : 디자인 페이지니까 코드가 있으면 X
 : 코드가 적힌 index.jsp는 WEB-INF 폴더에 복사해서 넣어주고 메인 경로에 있던 index.jsp에는 이동을 전가하도록 명령어를 설정해준다.
 
 Spring은 
  submit하면 매개변수의 값들을 자동으로 토스해주기 때문에 DTO를 매개변수로 선언하면 홈에 있는 정보를 간편하게 담아올 수 있어서 편리함!
 우리가 매개변수로 선언해 준 DTO 클래스의 값들을 가져올 경우 선언해준 클래스의 이름을 '소문자'로 시작해주면 된다.
 
  ex) 매개변수로 MemoDTO를 선언했으면 ${memoDTO.title} 로 값을 가져올 수 이음
 
 =======================================================================================================
 
  Spring에서는 DTO 에서 DTO를 관리할 수 있다
  
 상품을 관리하는 DTO(ItemDTO) 와
 편의점 정보를 담당하는 DTO(MarketDTO)
 
 그리고 이 두개의 DTO를 관리하는 DTO(OrderDTO)
 
 Spring은
  내가 선언하고 있는 멤버변수의 DTO와 폼의 이름을 자동적으로 매칭해주는데 우리는 orderdto 안의 itemdto안의 값들을 매칭해야하므로
 value값들에 경로를 지정해주어야 한다. (자동 매칭할 때 orderDTO에서 검색을 하기 때문)
 list타입으로 제공되기 때문에 객체 순서 또한 지정해주어야 한다.
 
 =======================================================================================================
 
 * 컨트롤러 메서드의 파라미터 타입(진입 메소드의 매개 변수 타입)
 
 #- HttpServletRequest, HttpServletResponse, HttpSession
  서블릿 API
  
 - @PathVariable 어노테이션 적용 파라미터
  URI 템플릿 변수에 접근할 때 사용
  
 #- @RequestParam
  HTTP 요청 파라미터를 매핑
  : 값을 하나, 두개 넘길 때.
 
 #- @CookieValue
  HTTP 쿠키 매핑
  : 쿠키의 값을 가져올 때.
  
  - @RequestBody
  : html의 body 컨텐트에 접근할 때 사용
  
  #- Map, Model, ModelMap
  : 진입 메서드에 파라미터로 이 3가지를 매개변수로 사용 가능
  
  #- 커맨드 객체
  : HTTP 요청 파라미터를 저장한 객체.(DTO 객체)
  
  =======================================================================================================
  
  @RequestParam 
  : DTO -> 하나 이상의 많은 값을 받아올 때 유용하지만
   하나, 두개의 값을 가져오는데 DTO를 만드는 건 자원 낭비.
   
  ======================================================================================================= 
  세션 값 확인하기
  
  1. request 객체로부터 가져오기 -> HttpServletRequest 매개값으로 받아와서 session 객체 생성 후 가져오기
  2. HttpSession 자체를 매개값으로 받아오기
  
  ======================================================================================================= 
  
  ** 실습 : 이 모든 것 이용해서 로그인/로그아웃, ID기억하기 만들기 **
	
  
   