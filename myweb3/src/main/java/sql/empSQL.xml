<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 필수속성 namespace : 그룹화 -->
<mapper namespace="yong.emp">
	<insert id="empInsert" parameterType="yong.emp.model.EmpDTO"><!-- parameterType : 키값  -->
		<!-- 공백은 1칸까지, 개행은 무시 -->
		insert into
			employee
		values(
			employee_idx.nextval,
			#{name},
			#{email},
			#{dept}
		)		
	</insert>
	<!-- <delete id="empDelete" parameterType="yong.emp.model.EmpDTO">
		delete from
			employee
		where
			name=#{name}			
	</delete> -->
	<delete id="empDelete" parameterType="String">
		delete from employee
		where name=#{name}
		<!-- 전달되는 파라미터값이 하나뿐이기 때문에 #{aaa}, #{a} 막 지정해줘도 Mybatis가 다 알아서 처리해주지만 알아보기 쉽게 name으로 지정 -->
	</delete>
	<select id="empAllList" resultType="yong.emp.model.EmpDTO"> <!-- select문의 경우 resultType이 필수 -->
		select * from employee
		order by idx desc
	</select>
	<select id="empFind" parameterType="String" resultType="yong.emp.model.EmpDTO">
		select * from employee
		where name=#{name}
		order by idx
	</select>
	<select id="empUpdateFind" parameterType="int" resultType="yong.emp.model.EmpDTO">
		select * from employee
		where idx=#{idx}
	</select>
	<update id="empUpdate" parameterType="yong.emp.model.EmpDTO">
		update employee
		set name=#{name},email=#{email},dept=#{dept}
		where idx=#{idx}
	</update>
</mapper>